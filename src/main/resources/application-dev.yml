spring:
  shardingsphere:
    props:
      sql-show: true
    datasource:
      names: master,slave1
      master:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://hitachi-iot-test-rds.cath6q1djhtk.rds.cn-northwest-1.amazonaws.com.cn:3306/shardingsphere_1
        username: hitachi
        password: hitachi_2023
      slave1:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://hitachi-iot-test-rds.cath6q1djhtk.rds.cn-northwest-1.amazonaws.com.cn:3306/shardingsphere_2
        username: hitachi
        password: hitachi_2023
    rules:
      sharding:
        tables:
          student:
            actual-data-nodes: readwrite_ds.tb_student_$->{1..3}
            table-strategy:
              standard:
                sharding-column: id
                sharding-algorithm-name: inline_stu
          operation_time:
            actual-data-nodes: readwrite_ds.operation_time_$->{1..3}
            table-strategy:
              standard:
                sharding-column: thing_id
                sharding-algorithm-name: inline
        sharding-algorithms:
          inline_stu:
            type: INLINE
            props:
              algorithm-expression: tb_student_$->{3- id % 3}
              allow-range-query-with-inline-sharding: true
          inline:
            type: INLINE
            props:
              algorithm-expression: operation_time_$->{3 - thing_id.hashCode() % 3}
              allow-range-query-with-inline-sharding: true
      readwrite-splitting:
        data-sources:
          readwrite_ds:
            static-strategy:
              write-data-source-name: master
              read-data-source-names: slave1
            load-balancer-name: round_robin
        load-balancers:
          round_robin:
            type: ROUND_ROBIN
  main:
    allow-bean-definition-overriding: true